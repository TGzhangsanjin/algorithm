package class03;

/**
 * 一个数组中，有一种数出现了K次，其他数都出现了 M次， M>1, K<M,找到出现了 K次的数，
 * 要求：额外空间复杂度 O(1), 时间复杂度 O(N)
 *
 * 思路：
 *  1. 准备一个额外的32位数组，array01, 用来存放原条件数组各个位置上的二进制和，
 *     比如，将原条件数组所有数的二进制第一位相加的和，放入 array01[31]中，原条件数组所有数的二进制和放入 array01[30]中
 *  2. 假设这个出现了 K 次的数是a，如果 array01[31]的值模M为0，则说明 a的第一位是0，反之则为1,
 *     即 array01[31]%M == 0, 则 a的第一位是0，反之则为1， array01[31]%M != 0, 则 a 的第一位是1，反之则为0
 * @Author 张三金
 * @Date 2021/11/19 0019 14:29
 * @Company jzb
 * @Version 1.0.0
 */
public class Code03_KM {
}
